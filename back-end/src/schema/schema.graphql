scalar Void

# Comments in GraphQL strings (such as this one) start with the hash (#) symbol.
# This "Book" type defines the queryable fields for every book in our data source.
type Book {
  title: String
  author: Author
}

type Author {
  name: String
  books: [Book]
}

enum Episode {
  private
  public
}

enum AccountType {
  user
  admin
}

type Place {
  id: String 
  name: String
  description: String
  location_type: String
  latitude: String
  longitude: String
  event_time: String
  event_type: Episode
  street: String
  city: String
  suburb: String
  country: String
  province: String
  code: String
}

type AccountDetails {
  id: String
  username: String
  name: String
  lastname: String
  password: String
  email: String
}

type UserDetails {
  id: String
  username: String
}

type UserID {
  id: String
}

# The "Query" type is special: it lists all of the available queries that
# clients can execute, along with the return type for each. In this
# case, the "books" query returns an array of zero or more Books (defined above).
type Query {
  getAllPlaces: [Place]
}

type Mutation {
  createAccount(email: String!, username: String!, password: String!, name: String, surname: String): UserDetails,
  deleteAccount(id: String!, email: String!): UserID,
  updateAccount(email: String!, username: String!, password: String!, name: String, surname: String): UserID,
}

# Mutations
# type Mutation {
  
# }